{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/app/%5Blang%5D/dictionaries.ts"],"sourcesContent":["import 'server-only';\n\nconst dictionaries = {\n  en: () => import('../dictionaries/en.json').then((module) => module.default),\n  // nl: () => import('../dictionaries/nl.json').then((module) => module.default),\n  uk: () => import('../dictionaries/uk.json').then((module) => module.default),\n  ru: () => import('../dictionaries/ru.json').then((module) => module.default),\n};\n\nexport async function getDictionary(locale: string) {\n  // If the passed locale is not one of the known keys, fallback to 'en'\n  if (!['en', 'uk', 'ru'].includes(locale)) {\n    locale = 'en';\n  }\n\n  return dictionaries[locale as 'en' | 'uk' | 'ru']();\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eAAe;IACnB,IAAI,IAAM,2GAAkC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;IAC3E,gFAAgF;IAChF,IAAI,IAAM,2GAAkC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;IAC3E,IAAI,IAAM,2GAAkC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;AAC7E;AAEO,eAAe,cAAc,MAAc;IAChD,sEAAsE;IACtE,IAAI,CAAC;QAAC;QAAM;QAAM;KAAK,CAAC,QAAQ,CAAC,SAAS;QACxC,SAAS;IACX;IAEA,OAAO,YAAY,CAAC,OAA6B;AACnD"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/app/%5Blang%5D/page.tsx"],"sourcesContent":["// import { getDictionary } from './dictionaries';\n\n// export default async function Page({\n//   params,\n// }: {\n//   params: Promise<{ lang: 'en' | 'nl' | 'uk' | 'ru' }>;\n// }) {\n//   const { lang } = await params;\n//   const dict = await getDictionary(lang); // en\n//   console.log(dict);\n//   return <button>hello sunday</button>; // Add to Cart\n// }\n\nimport { getDictionary } from './dictionaries';\n\nexport default async function Page({\n  params,\n}: {\n  params: Promise<{ lang: 'en' | 'uk' | 'ru' }>;\n}) {\n  const { lang } = await params;\n  console.log(lang);\n  console.log(getDictionary);\n  const dict = await getDictionary(lang); // en\n  console.log(dict);\n  return <button>hello</button>; // Add to Cart\n}\n"],"names":[],"mappings":"AAAA,kDAAkD;AAElD,uCAAuC;AACvC,YAAY;AACZ,OAAO;AACP,0DAA0D;AAC1D,OAAO;AACP,mCAAmC;AACnC,kDAAkD;AAClD,uBAAuB;AACvB,yDAAyD;AACzD,IAAI;;;;;AAEJ;;;AAEe,eAAe,KAAK,EACjC,MAAM,EAGP;IACC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IACvB,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,sIAAA,CAAA,gBAAa;IACzB,MAAM,OAAO,MAAM,CAAA,GAAA,sIAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,KAAK;IAC7C,QAAQ,GAAG,CAAC;IACZ,qBAAO,8OAAC;kBAAO;;;;;cAAgB,cAAc;AAC/C"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;wBAAAA,CAAY,OAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACZC,UAAU;;iBACVC,UAAU,EAAE;kBACd,QAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;;WACAC,UAAU;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}