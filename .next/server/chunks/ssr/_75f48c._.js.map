{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/page.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"ctas\": \"page-module___8aEwW__ctas\",\n  \"footer\": \"page-module___8aEwW__footer\",\n  \"logo\": \"page-module___8aEwW__logo\",\n  \"main\": \"page-module___8aEwW__main\",\n  \"page\": \"page-module___8aEwW__page\",\n  \"primary\": \"page-module___8aEwW__primary\",\n  \"secondary\": \"page-module___8aEwW__secondary\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Schema.ts"],"sourcesContent":["import * as yup from 'yup';\nimport { InferType } from 'yup';\n\nexport const schemaContact = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове\")\n    .matches(\n      /^[A-Za-zА-Яа-яЇїІіЄєҐґ\\s-]+$/,\n      'Тільки кирилиця чи латиниця, пробіли і дефіси',\n    )\n    .min(2, \"Ім'я має містити принаймні 2 символи\")\n    .max(45, \"Ім'я може містити максимум 45 символів\"),\n  email: yup\n    .string()\n    .email('Невірний формат email')\n    .required(\"Email обов'язковий\"),\n  description: yup\n    .string()\n    .required(\"Опис обов'язковий\")\n    .min(10, 'Опис має містити принаймні 10 символів')\n    .max(1000, 'Опис може містити максимум 1000 символів'),\n  phone: yup.string().required('Телефон обовязковий'),\n  companyRegistration: yup.boolean(),\n  accountingBookkeeping: yup.boolean(),\n  taxReturns: yup.boolean(),\n  financialPlanning: yup.boolean(),\n  loansBusiness: yup.boolean(),\n  legalContract: yup.boolean(),\n  other: yup.boolean(),\n});\n\nexport type SignupSchema = InferType<typeof schemaContact>;\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,gBAAgB,oIAAI,MAAM,GAAG,KAAK,CAAC;IAC9C,MAAM,oIACH,MAAM,GACN,QAAQ,CAAC,oBACT,OAAO,CACN,gCACA,iDAED,GAAG,CAAC,GAAG,wCACP,GAAG,CAAC,IAAI;IACX,OAAO,oIACJ,MAAM,GACN,KAAK,CAAC,yBACN,QAAQ,CAAC;IACZ,aAAa,oIACV,MAAM,GACN,QAAQ,CAAC,qBACT,GAAG,CAAC,IAAI,0CACR,GAAG,CAAC,MAAM;IACb,OAAO,oIAAI,MAAM,GAAG,QAAQ,CAAC;IAC7B,qBAAqB,oIAAI,OAAO;IAChC,uBAAuB,oIAAI,OAAO;IAClC,YAAY,oIAAI,OAAO;IACvB,mBAAmB,oIAAI,OAAO;IAC9B,eAAe,oIAAI,OAAO;IAC1B,eAAe,oIAAI,OAAO;IAC1B,OAAO,oIAAI,OAAO;AACpB"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/PhoneNumberInput.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PhoneNumberInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PhoneNumberInput() from the server but PhoneNumberInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Input/PhoneNumberInput.tsx <module evaluation>\",\n    \"PhoneNumberInput\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2EACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/PhoneNumberInput.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PhoneNumberInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PhoneNumberInput() from the server but PhoneNumberInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Input/PhoneNumberInput.tsx\",\n    \"PhoneNumberInput\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,uDACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Checkbox/Checkbox.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Checkbox/Checkbox.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Checkbox/Checkbox.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwS,GACrU,sEACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Checkbox/Checkbox.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Checkbox/Checkbox.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Checkbox/Checkbox.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Textarea/Textarea.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TextareaComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TextareaComponent() from the server but TextareaComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Textarea/Textarea.tsx <module evaluation>\",\n    \"TextareaComponent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,sEACA"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Textarea/Textarea.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TextareaComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TextareaComponent() from the server but TextareaComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Textarea/Textarea.tsx\",\n    \"TextareaComponent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kDACA"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Form.tsx"],"sourcesContent":["// 'use client';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { InferType } from 'yup';\nimport { schemaContact } from './Schema';\nimport { Box, Button, Input } from '@mui/material';\nimport { PhoneNumberInput } from '../Input/PhoneNumberInput';\nimport CheckboxInput from '../Checkbox/Checkbox';\nimport { TextareaComponent } from '../Textarea/Textarea';\n\n// Infer your form type directly from the schema:\ntype FormValues = InferType<typeof schemaContact>;\n\nexport function MyForm() {\n  const formProps = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      description: '',\n      companyRegistration: false,\n      taxReturns: false,\n      accountingBookkeeping: false,\n      financialPlanning: false,\n      loansBusiness: false,\n      legalContract: false,\n      other: false,\n      phone: '',\n    },\n    resolver: yupResolver(schemaContact),\n  });\n\n  const onSubmit = (data: FormValues) => {\n    console.log(data);\n  };\n\n  return (\n    <FormProvider {...formProps}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          void formProps.handleSubmit(onSubmit)(e);\n        }}\n      >\n        <Box>\n          <Input id=\"name\" />\n        </Box>\n        <Box>\n          <Input id=\"email\" />\n        </Box>\n        <Box>\n          <PhoneNumberInput />\n        </Box>\n\n        <Box>\n          <CheckboxInput id=\"accountingBookkeeping\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"taxReturns\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"financialPlanning\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"companyRegistration\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"loansBusiness\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"legalContract\" />\n        </Box>\n        <Box>\n          {' '}\n          <CheckboxInput id=\"other\" />\n        </Box>\n\n        <Box>\n          <TextareaComponent id=\"description\" />\n        </Box>\n\n        <Button id=\"send\" />\n      </form>\n    </FormProvider>\n  );\n}\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAEhB;AAEA;AAEA;AACA;AACA;AAPA;AAIA;AAAA;AAAA;;;;;;;;;AAQO,SAAS;IACd,MAAM,YAAY,CAAA,GAAA,wKAAA,CAAA,UAAO,AAAD,EAAE;QACxB,eAAe;YACb,MAAM;YACN,OAAO;YACP,aAAa;YACb,qBAAqB;YACrB,YAAY;YACZ,uBAAuB;YACvB,mBAAmB;YACnB,eAAe;YACf,eAAe;YACf,OAAO;YACP,OAAO;QACT;QACA,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,mIAAA,CAAA,gBAAa;IACrC;IAEA,MAAM,WAAW,CAAC;QAChB,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,8OAAC,wKAAA,CAAA,eAAY;QAAE,GAAG,SAAS;kBACzB,cAAA,8OAAC;YACC,UAAU,CAAC;gBACT,EAAE,cAAc;gBAChB,KAAK,UAAU,YAAY,CAAC,UAAU;YACxC;;8BAEA,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,uLAAA,CAAA,QAAK;wBAAC,IAAG;;;;;;;;;;;8BAEZ,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,uLAAA,CAAA,QAAK;wBAAC,IAAG;;;;;;;;;;;8BAEZ,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,+IAAA,CAAA,mBAAgB;;;;;;;;;;8BAGnB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;;wBACD;sCACD,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;;8BAGpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,oBAAiB;wBAAC,IAAG;;;;;;;;;;;8BAGxB,8OAAC,0LAAA,CAAA,SAAM;oBAAC,IAAG;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Pages/HomePage.tsx"],"sourcesContent":["import React from 'react';\nimport { MyForm } from '../Form/Form';\nimport { Container } from '@mui/material';\n\nexport const HomePage = () => {\n  return (\n    <Container maxWidth=\"xl\">\n      <div>\n        <MyForm />\n      </div>\n    </Container>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEO,MAAM,WAAW;IACtB,qBACE,8OAAC,mMAAA,CAAA,YAAS;QAAC,UAAS;kBAClB,cAAA,8OAAC;sBACC,cAAA,8OAAC,kIAAA,CAAA,SAAM;;;;;;;;;;;;;;;AAIf"}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/app/page.tsx"],"sourcesContent":["import styles from './page.module.css';\nimport { HomePage } from '@/components/Pages/HomePage';\n\nexport default function Home() {\n  return (\n    <div className={styles.page}>\n      <HomePage />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,IAAI;kBACzB,cAAA,8OAAC,uIAAA,CAAA,WAAQ;;;;;;;;;;AAGf"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}