{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Schema.ts"],"sourcesContent":["import * as yup from 'yup';\nimport { InferType } from 'yup';\n\nexport const schemaContact = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове\")\n    .matches(\n      /^[A-Za-zА-Яа-яЇїІіЄєҐґ\\s-]+$/,\n      'Тільки кирилиця чи латиниця, пробіли і дефіси',\n    )\n    .min(2, \"Ім'я має містити принаймні 2 символи\")\n    .max(45, \"Ім'я може містити максимум 45 символів\"),\n  email: yup\n    .string()\n    .email('Невірний формат email')\n    .required(\"Email обов'язковий\"),\n  description: yup\n    .string()\n    .required(\"Опис обов'язковий\")\n    .min(10, 'Опис має містити принаймні 10 символів')\n    .max(1000, 'Опис може містити максимум 1000 символів'),\n  phone: yup.string().required('Телефон обовязковий'),\n  companyRegistration: yup.boolean(),\n  accountingBookkeeping: yup.boolean(),\n  taxReturns: yup.boolean(),\n  financialPlanning: yup.boolean(),\n  loansBusiness: yup.boolean(),\n  legalContract: yup.boolean(),\n  other: yup.boolean(),\n});\n\nexport type SignupSchema = InferType<typeof schemaContact>;\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,gBAAgB,oIAAI,MAAM,GAAG,KAAK,CAAC;IAC9C,MAAM,oIACH,MAAM,GACN,QAAQ,CAAC,oBACT,OAAO,CACN,gCACA,iDAED,GAAG,CAAC,GAAG,wCACP,GAAG,CAAC,IAAI;IACX,OAAO,oIACJ,MAAM,GACN,KAAK,CAAC,yBACN,QAAQ,CAAC;IACZ,aAAa,oIACV,MAAM,GACN,QAAQ,CAAC,qBACT,GAAG,CAAC,IAAI,0CACR,GAAG,CAAC,MAAM;IACb,OAAO,oIAAI,MAAM,GAAG,QAAQ,CAAC;IAC7B,qBAAqB,oIAAI,OAAO;IAChC,uBAAuB,oIAAI,OAAO;IAClC,YAAY,oIAAI,OAAO;IACvB,mBAAmB,oIAAI,OAAO;IAC9B,eAAe,oIAAI,OAAO;IAC1B,eAAe,oIAAI,OAAO;IAC1B,OAAO,oIAAI,OAAO;AACpB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/PhoneInput.tsx"],"sourcesContent":["// 'use client';\n// import React from 'react';\n// import { Controller, useFormContext } from 'react-hook-form';\n// import { MuiTelInput } from 'mui-tel-input';\n\n// export const PhoneInputComponent = () => {\n//   const { control } = useFormContext();\n\n//   return (\n//     <Controller\n//       name=\"phone\"\n//       control={control}\n//       rules={{ required: 'Phone number is required' }}\n//       render={({ field, fieldState: { error } }) => (\n//         <div>\n//           <label htmlFor=\"phone\">Phone</label>\n//           <MuiTelInput {...field} defaultCountry=\"NL\" />\n//           {error && <p style={{ color: 'red' }}>{error.message}</p>}\n//         </div>\n//       )}\n//     />\n//   );\n// };\n\n'use client';\nimport React, { useState, useEffect, useId } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { MuiTelInput } from 'mui-tel-input';\n\nexport const PhoneInputComponent = () => {\n  // 1. Ensure hooks are always called in the same order\n  const [mounted, setMounted] = useState(false);\n  const reactId = useId();\n  const { control } = useFormContext();\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 2. Defer rendering until after the component has mounted\n  if (!mounted) return null;\n\n  return (\n    <Controller\n      name=\"phone\"\n      control={control}\n      rules={{ required: 'Phone number is required' }}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          {/* Use the stable ID for both label and input */}\n          <label htmlFor={`phone-${reactId}`}>Phone</label>\n          <MuiTelInput {...field} defaultCountry=\"NL\" id={`phone-${reactId}`} />\n          {error && <p style={{ color: 'red' }}>{error.message}</p>}\n        </div>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,6BAA6B;AAC7B,gEAAgE;AAChE,+CAA+C;AAE/C,6CAA6C;AAC7C,0CAA0C;AAE1C,aAAa;AACb,kBAAkB;AAClB,qBAAqB;AACrB,0BAA0B;AAC1B,yDAAyD;AACzD,wDAAwD;AACxD,gBAAgB;AAChB,iDAAiD;AACjD,2DAA2D;AAC3D,uEAAuE;AACvE,iBAAiB;AACjB,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;;;;;AAGL;AACA;AACA;AAHA;;;;;AAKO,MAAM,sBAAsB;IACjC,sDAAsD;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD;IACpB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAEjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,2DAA2D;IAC3D,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,MAAK;QACL,SAAS;QACT,OAAO;YAAE,UAAU;QAA2B;QAC9C,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;kCAEC,8OAAC;wBAAM,SAAS,CAAC,MAAM,EAAE,SAAS;kCAAE;;;;;;kCACpC,8OAAC,wKAAA,CAAA,cAAW;wBAAE,GAAG,KAAK;wBAAE,gBAAe;wBAAK,IAAI,CAAC,MAAM,EAAE,SAAS;;;;;;oBACjE,uBAAS,8OAAC;wBAAE,OAAO;4BAAE,OAAO;wBAAM;kCAAI,MAAM,OAAO;;;;;;;;;;;;;;;;;AAK9D"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["// 'use client';\n// import React, { useId } from 'react';\n// import { Checkbox, FormControlLabel, FormHelperText } from '@mui/material';\n// import { Controller, useFormContext } from 'react-hook-form';\n\n// interface CheckboxInputConfig {\n//   name: string;\n//   label: string;\n// }\n\n// const config: Record<string, CheckboxInputConfig> = {\n//   companyRegistration: {\n//     name: 'companyRegistration',\n//     label: 'Company registration & setup (ZZP, BV, Holding, Stichting)',\n//   },\n//   accountingBookkeeping: {\n//     name: 'accountingBookkeeping',\n//     label: 'Tax returns - personal & business',\n//   },\n//   taxReturns: {\n//     name: 'taxReturns',\n//     label: 'Accounting & bookkeeping',\n//   },\n//   financialPlanning: {\n//     name: 'financialPlanning',\n//     label: 'Financial planning & tax optimization',\n//   },\n//   loansBusiness: {\n//     name: 'loansBusiness',\n//     label: 'Loans & business credit applications',\n//   },\n//   legalContract: {\n//     name: 'legalContract',\n//     label: 'Legal & contract support',\n//   },\n//   other: {\n//     name: 'other',\n//     label: 'Other questions',\n//   },\n// };\n\n// interface CheckboxInputProps {\n//   id: string;\n// }\n\n// const CheckboxInput = ({ id }: CheckboxInputProps) => {\n//   const reactId = useId();\n//   const { name, label } = config[id];\n//   const { control } = useFormContext();\n//   return (\n//     <div>\n//       <Controller\n//         name={name}\n//         control={control}\n//         render={({ field, fieldState: { error } }) => (\n//           <div>\n//             <FormControlLabel\n//               control={\n//                 <Checkbox\n//                   {...field}\n//                   checked={!!field.value}\n//                   id={`${name}-${reactId}`}\n//                 /> // id={name} added\n//               }\n//               label={label}\n//             />\n//             {error && <FormHelperText error>{error.message}</FormHelperText>}\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default CheckboxInput;\n\n'use client';\nimport React, { useEffect, useState, useId } from 'react';\nimport { Checkbox, FormControlLabel, FormHelperText } from '@mui/material';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface CheckboxInputProps {\n  id: string;\n}\n\ninterface CheckboxInputConfig {\n  name: string;\n  label: string;\n}\n\nconst config: Record<string, CheckboxInputConfig> = {\n  companyRegistration: {\n    name: 'companyRegistration',\n    label: 'Company registration & setup (ZZP, BV, Holding, Stichting)',\n  },\n  accountingBookkeeping: {\n    name: 'accountingBookkeeping',\n    label: 'Tax returns - personal & business',\n  },\n  taxReturns: {\n    name: 'taxReturns',\n    label: 'Accounting & bookkeeping',\n  },\n  financialPlanning: {\n    name: 'financialPlanning',\n    label: 'Financial planning & tax optimization',\n  },\n  loansBusiness: {\n    name: 'loansBusiness',\n    label: 'Loans & business credit applications',\n  },\n  legalContract: {\n    name: 'legalContract',\n    label: 'Legal & contract support',\n  },\n  other: {\n    name: 'other',\n    label: 'Other questions',\n  },\n};\n\nconst CheckboxInput = ({ id }: CheckboxInputProps) => {\n  // 1. Always call your Hooks in the same order, unconditionally\n  const [mounted, setMounted] = useState(false);\n  const { name, label } = config[id];\n  const { control } = useFormContext();\n  const reactId = useId();\n\n  // 2. Then do your side effects\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 3. Finally, if you need to bail out of rendering, do so\n  if (!mounted) return null;\n\n  // 4. Otherwise, proceed to render the UI\n  return (\n    <div>\n      <Controller\n        name={name}\n        control={control}\n        render={({ field, fieldState: { error } }) => (\n          <div>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  {...field}\n                  checked={!!field.value}\n                  id={`${name}-${reactId}`}\n                />\n              }\n              label={label}\n            />\n            {error && <FormHelperText error>{error.message}</FormHelperText>}\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default CheckboxInput;\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,wCAAwC;AACxC,8EAA8E;AAC9E,gEAAgE;AAEhE,kCAAkC;AAClC,kBAAkB;AAClB,mBAAmB;AACnB,IAAI;AAEJ,wDAAwD;AACxD,2BAA2B;AAC3B,mCAAmC;AACnC,2EAA2E;AAC3E,OAAO;AACP,6BAA6B;AAC7B,qCAAqC;AACrC,kDAAkD;AAClD,OAAO;AACP,kBAAkB;AAClB,0BAA0B;AAC1B,yCAAyC;AACzC,OAAO;AACP,yBAAyB;AACzB,iCAAiC;AACjC,sDAAsD;AACtD,OAAO;AACP,qBAAqB;AACrB,6BAA6B;AAC7B,qDAAqD;AACrD,OAAO;AACP,qBAAqB;AACrB,6BAA6B;AAC7B,yCAAyC;AACzC,OAAO;AACP,aAAa;AACb,qBAAqB;AACrB,gCAAgC;AAChC,OAAO;AACP,KAAK;AAEL,iCAAiC;AACjC,gBAAgB;AAChB,IAAI;AAEJ,0DAA0D;AAC1D,6BAA6B;AAC7B,wCAAwC;AACxC,0CAA0C;AAC1C,aAAa;AACb,YAAY;AACZ,oBAAoB;AACpB,sBAAsB;AACtB,4BAA4B;AAC5B,0DAA0D;AAC1D,kBAAkB;AAClB,gCAAgC;AAChC,0BAA0B;AAC1B,4BAA4B;AAC5B,+BAA+B;AAC/B,4CAA4C;AAC5C,8CAA8C;AAC9C,wCAAwC;AACxC,kBAAkB;AAClB,8BAA8B;AAC9B,iBAAiB;AACjB,gFAAgF;AAChF,mBAAmB;AACnB,aAAa;AACb,WAAW;AACX,aAAa;AACb,OAAO;AACP,KAAK;AAEL,gCAAgC;;;;;AAGhC;AAEA;AADA;AAAA;AAAA;AAFA;;;;;AAcA,MAAM,SAA8C;IAClD,qBAAqB;QACnB,MAAM;QACN,OAAO;IACT;IACA,uBAAuB;QACrB,MAAM;QACN,OAAO;IACT;IACA,YAAY;QACV,MAAM;QACN,OAAO;IACT;IACA,mBAAmB;QACjB,MAAM;QACN,OAAO;IACT;IACA,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,OAAO;QACL,MAAM;QACN,OAAO;IACT;AACF;AAEA,MAAM,gBAAgB,CAAC,EAAE,EAAE,EAAsB;IAC/C,+DAA+D;IAC/D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,GAAG;IAClC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IACjC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD;IAEpB,+BAA+B;IAC/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,0DAA0D;IAC1D,IAAI,CAAC,SAAS,OAAO;IAErB,yCAAyC;IACzC,qBACE,8OAAC;kBACC,cAAA,8OAAC,8JAAA,CAAA,aAAU;YACT,MAAM;YACN,SAAS;YACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;sCACC,8OAAC,wNAAA,CAAA,mBAAgB;4BACf,uBACE,8OAAC,gMAAA,CAAA,WAAQ;gCACN,GAAG,KAAK;gCACT,SAAS,CAAC,CAAC,MAAM,KAAK;gCACtB,IAAI,GAAG,KAAK,CAAC,EAAE,SAAS;;;;;;4BAG5B,OAAO;;;;;;wBAER,uBAAS,8OAAC,kNAAA,CAAA,iBAAc;4BAAC,KAAK;sCAAE,MAAM,OAAO;;;;;;;;;;;;;;;;;;;;;;AAM1D;uCAEe"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Textarea/Textarea.tsx"],"sourcesContent":["// 'use client';\n// import React, { useId } from 'react';\n// import TextField from '@mui/material/TextField';\n// import { Controller, useFormContext } from 'react-hook-form';\n\n// interface InputConfig {\n//   name: string;\n//   label: string;\n//   placeholder: string;\n// }\n\n// const config: Record<string, InputConfig> = {\n//   description: {\n//     name: 'description',\n//     label: 'Description',\n//     placeholder: 'Enter your description',\n//   },\n// };\n\n// interface InputProps {\n//   id: string;\n// }\n\n// export const TextareaComponent = ({ id }: InputProps) => {\n//   // Generate a stable ID\n//   const reactId = useId();\n//   const { name, label, placeholder } = config[id];\n//   const { control } = useFormContext();\n\n//   return (\n//     <Controller\n//       name={name}\n//       control={control}\n//       render={({ field, fieldState: { error } }) => (\n//         <div>\n//           <label htmlFor={`${name}-${reactId}`}>{label}</label>\n//           <TextField\n//             multiline\n//             rows={4}\n//             {...field}\n//             id={`${name}-${reactId}`}\n//             variant=\"outlined\"\n//             error={!!error}\n//             helperText={error ? error.message : ''}\n//             placeholder={placeholder}\n//             fullWidth\n//           />\n//         </div>\n//       )}\n//     />\n//   );\n// };\n\n'use client';\nimport React, { useEffect, useState, useId } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface InputConfig {\n  name: string;\n  label: string;\n  placeholder: string;\n}\n\nconst config: Record<string, InputConfig> = {\n  description: {\n    name: 'description',\n    label: 'Description',\n    placeholder: 'Enter your description',\n  },\n};\n\ninterface InputProps {\n  id: string;\n}\n\nexport const TextareaComponent = ({ id }: InputProps) => {\n  // 1. Call hooks unconditionally at top\n  const [mounted, setMounted] = useState(false);\n  const reactId = useId();\n  const { name, label, placeholder } = config[id];\n  const { control } = useFormContext();\n\n  // 2. Then do side effects\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 3. Conditionally return null or the UI\n  if (!mounted) return null;\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <label htmlFor={`${name}-${reactId}`}>{label}</label>\n          <TextField\n            multiline\n            rows={4}\n            {...field}\n            id={`${name}-${reactId}`}\n            variant=\"outlined\"\n            error={!!error}\n            helperText={error ? error.message : ''}\n            placeholder={placeholder}\n            fullWidth\n          />\n        </div>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,wCAAwC;AACxC,mDAAmD;AACnD,gEAAgE;AAEhE,0BAA0B;AAC1B,kBAAkB;AAClB,mBAAmB;AACnB,yBAAyB;AACzB,IAAI;AAEJ,gDAAgD;AAChD,mBAAmB;AACnB,2BAA2B;AAC3B,4BAA4B;AAC5B,6CAA6C;AAC7C,OAAO;AACP,KAAK;AAEL,yBAAyB;AACzB,gBAAgB;AAChB,IAAI;AAEJ,6DAA6D;AAC7D,4BAA4B;AAC5B,6BAA6B;AAC7B,qDAAqD;AACrD,0CAA0C;AAE1C,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,wDAAwD;AACxD,gBAAgB;AAChB,kEAAkE;AAClE,uBAAuB;AACvB,wBAAwB;AACxB,uBAAuB;AACvB,yBAAyB;AACzB,wCAAwC;AACxC,iCAAiC;AACjC,8BAA8B;AAC9B,sDAAsD;AACtD,wCAAwC;AACxC,wBAAwB;AACxB,eAAe;AACf,iBAAiB;AACjB,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;;;;;AAGL;AAEA;AADA;AAFA;;;;;AAWA,MAAM,SAAsC;IAC1C,aAAa;QACX,MAAM;QACN,OAAO;QACP,aAAa;IACf;AACF;AAMO,MAAM,oBAAoB,CAAC,EAAE,EAAE,EAAc;IAClD,uCAAuC;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,GAAG;IAC/C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAEjC,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,yCAAyC;IACzC,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;kCACC,8OAAC;wBAAM,SAAS,GAAG,KAAK,CAAC,EAAE,SAAS;kCAAG;;;;;;kCACvC,8OAAC,2JAAA,CAAA,UAAS;wBACR,SAAS;wBACT,MAAM;wBACL,GAAG,KAAK;wBACT,IAAI,GAAG,KAAK,CAAC,EAAE,SAAS;wBACxB,SAAQ;wBACR,OAAO,CAAC,CAAC;wBACT,YAAY,QAAQ,MAAM,OAAO,GAAG;wBACpC,aAAa;wBACb,SAAS;;;;;;;;;;;;;;;;;AAMrB"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Button/Button.tsx"],"sourcesContent":["'use client';\nimport Button from '@mui/material/Button';\nimport React from 'react';\nimport SendIcon from '@mui/icons-material/Send';\n\ninterface ButtonConfig {\n  variant: 'contained' | 'outlined' | 'text';\n  endIcon: React.ReactNode;\n  text: string;\n  type: 'button' | 'submit' | 'reset';\n}\n\nconst config: Record<string, ButtonConfig> = {\n  send: {\n    variant: 'contained',\n    endIcon: <SendIcon />,\n    text: 'Send',\n    type: 'submit',\n  },\n};\n\ninterface ButtonProps {\n  id: string;\n}\n\nexport const ButtonComponent = ({ id }: ButtonProps) => {\n  const { variant, endIcon, text, type } = config[id];\n  console.log(text);\n  return (\n    <Button variant={variant} endIcon={endIcon} type={type}>\n      {text}\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AAFA;AADA;;;;AAYA,MAAM,SAAuC;IAC3C,MAAM;QACJ,SAAS;QACT,uBAAS,8OAAC,yJAAA,CAAA,UAAQ;;;;;QAClB,MAAM;QACN,MAAM;IACR;AACF;AAMO,MAAM,kBAAkB,CAAC,EAAE,EAAE,EAAe;IACjD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG;IACnD,QAAQ,GAAG,CAAC;IACZ,qBACE,8OAAC,qJAAA,CAAA,UAAM;QAAC,SAAS;QAAS,SAAS;QAAS,MAAM;kBAC/C;;;;;;AAGP"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/Input.tsx"],"sourcesContent":["// 'use client';\n// import { TextField } from '@mui/material';\n// import React from 'react';\n// import { Controller, useFormContext } from 'react-hook-form';\n\n// interface InputConfig {\n//   name: string;\n//   label: string;\n//   type: string;\n//   placeholder: string;\n// }\n\n// const config: Record<string, InputConfig> = {\n//   name: {\n//     name: 'name',\n//     label: 'Name',\n//     type: 'text',\n//     placeholder: 'Enter your name',\n//   },\n//   email: {\n//     name: 'email',\n//     label: 'Email',\n//     type: 'email',\n//     placeholder: 'Enter your email',\n//   },\n// };\n\n// interface InputProps {\n//   id: string;\n// }\n\n// export const InputComponent = ({ id }: InputProps) => {\n//   const { name, label, type, placeholder } = config[id];\n//   const { control } = useFormContext();\n\n//   console.log(name);\n\n//   return (\n//     <Controller\n//       name={name}\n//       control={control}\n//       render={({ field, fieldState: { error } }) => (\n//         <div>\n//           <label htmlFor={name}>{label}</label>\n//           <TextField\n//             {...field}\n//             id={name}\n//             variant=\"outlined\"\n//             type={type}\n//             error={!!error}\n//             helperText={error ? error.message : ''}\n//             placeholder={placeholder}\n//             fullWidth\n//           />\n//         </div>\n//       )}\n//     />\n//   );\n// };\n\n'use client';\nimport { TextField } from '@mui/material';\nimport React, { useEffect, useState, useId } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface InputConfig {\n  name: string;\n  label: string;\n  type: string;\n  placeholder: string;\n}\n\nconst config: Record<string, InputConfig> = {\n  name: {\n    name: 'name',\n    label: 'Name',\n    type: 'text',\n    placeholder: 'Enter your name',\n  },\n  email: {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Enter your email',\n  },\n};\n\ninterface InputProps {\n  id: string;\n}\n\nexport const InputComponent = ({ id }: InputProps) => {\n  // 1. Always call your Hooks unconditionally at the top\n  const [mounted, setMounted] = useState(false);\n  const reactId = useId();\n  const { control } = useFormContext();\n\n  // 2. Then do side effects\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 3. Finally, if you need to bail out of rendering, do so\n  if (!mounted) {\n    return null;\n  }\n\n  // 4. Now do the rest of your logic\n  const { name, label, type, placeholder } = config[id];\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <label htmlFor={`${name}-${reactId}`}>{label}</label>\n          <TextField\n            {...field}\n            id={`${name}-${reactId}`}\n            variant=\"outlined\"\n            type={type}\n            error={!!error}\n            helperText={error ? error.message : ''}\n            placeholder={placeholder}\n            fullWidth\n          />\n        </div>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,6CAA6C;AAC7C,6BAA6B;AAC7B,gEAAgE;AAEhE,0BAA0B;AAC1B,kBAAkB;AAClB,mBAAmB;AACnB,kBAAkB;AAClB,yBAAyB;AACzB,IAAI;AAEJ,gDAAgD;AAChD,YAAY;AACZ,oBAAoB;AACpB,qBAAqB;AACrB,oBAAoB;AACpB,sCAAsC;AACtC,OAAO;AACP,aAAa;AACb,qBAAqB;AACrB,sBAAsB;AACtB,qBAAqB;AACrB,uCAAuC;AACvC,OAAO;AACP,KAAK;AAEL,yBAAyB;AACzB,gBAAgB;AAChB,IAAI;AAEJ,0DAA0D;AAC1D,2DAA2D;AAC3D,0CAA0C;AAE1C,uBAAuB;AAEvB,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,wDAAwD;AACxD,gBAAgB;AAChB,kDAAkD;AAClD,uBAAuB;AACvB,yBAAyB;AACzB,wBAAwB;AACxB,iCAAiC;AACjC,0BAA0B;AAC1B,8BAA8B;AAC9B,sDAAsD;AACtD,wCAAwC;AACxC,wBAAwB;AACxB,eAAe;AACf,iBAAiB;AACjB,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;;;;;AAIL;AACA;AAFA;AADA;;;;;AAYA,MAAM,SAAsC;IAC1C,MAAM;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,aAAa;IACf;IACA,OAAO;QACL,MAAM;QACN,OAAO;QACP,MAAM;QACN,aAAa;IACf;AACF;AAMO,MAAM,iBAAiB,CAAC,EAAE,EAAE,EAAc;IAC/C,uDAAuD;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD;IACpB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAEjC,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,0DAA0D;IAC1D,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,mCAAmC;IACnC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,GAAG;IAErD,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;kCACC,8OAAC;wBAAM,SAAS,GAAG,KAAK,CAAC,EAAE,SAAS;kCAAG;;;;;;kCACvC,8OAAC,mMAAA,CAAA,YAAS;wBACP,GAAG,KAAK;wBACT,IAAI,GAAG,KAAK,CAAC,EAAE,SAAS;wBACxB,SAAQ;wBACR,MAAM;wBACN,OAAO,CAAC,CAAC;wBACT,YAAY,QAAQ,MAAM,OAAO,GAAG;wBACpC,aAAa;wBACb,SAAS;;;;;;;;;;;;;;;;;AAMrB"}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Form.tsx"],"sourcesContent":["'use client';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { InferType } from 'yup';\nimport { schemaContact } from './Schema';\nimport { PhoneInputComponent } from '../Input/PhoneInput';\nimport CheckboxInput from '../Checkbox/Checkbox';\nimport { TextareaComponent } from '../Textarea/Textarea';\nimport { ButtonComponent } from '../Button/Button';\nimport { InputComponent } from '../Input/Input';\n\n// Infer your form type directly from the schema:\ntype FormValues = InferType<typeof schemaContact>;\n\nexport function MyForm() {\n  const formProps = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      description: '',\n      companyRegistration: false,\n      taxReturns: false,\n      accountingBookkeeping: false,\n      financialPlanning: false,\n      loansBusiness: false,\n      legalContract: false,\n      other: false,\n      phone: '',\n    },\n    resolver: yupResolver(schemaContact),\n  });\n\n  const onSubmit = (data: FormValues) => {\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <FormProvider {...formProps}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            void formProps.handleSubmit(onSubmit)(e);\n          }}\n        >\n          <div>\n            <InputComponent id=\"name\" />\n          </div>\n          <div>\n            <InputComponent id=\"email\" />\n          </div>\n          <div>\n            <PhoneInputComponent />\n          </div>\n          <div>\n            <CheckboxInput id=\"accountingBookkeeping\" />\n          </div>\n          <div>\n            <CheckboxInput id=\"taxReturns\" />\n          </div>\n          <div>\n            <CheckboxInput id=\"financialPlanning\" />\n          </div>\n          <div>\n            <CheckboxInput id=\"companyRegistration\" />\n          </div>\n          <div>\n            <CheckboxInput id=\"loansBusiness\" />\n          </div>\n          <div>\n            <CheckboxInput id=\"legalContract\" />\n          </div>\n          <div>\n            <CheckboxInput id=\"other\" />\n          </div>\n\n          <div>\n            <TextareaComponent id=\"description\" />\n          </div>\n          <div>\n            <ButtonComponent id=\"send\" />\n          </div>\n        </form>\n      </FormProvider>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;;;;;;;;;;AAcO,SAAS;IACd,MAAM,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QACxB,eAAe;YACb,MAAM;YACN,OAAO;YACP,aAAa;YACb,qBAAqB;YACrB,YAAY;YACZ,uBAAuB;YACvB,mBAAmB;YACnB,eAAe;YACf,eAAe;YACf,OAAO;YACP,OAAO;QACT;QACA,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,mIAAA,CAAA,gBAAa;IACrC;IAEA,MAAM,WAAW,CAAC;QAChB,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,8OAAC;kBACC,cAAA,8OAAC,8JAAA,CAAA,eAAY;YAAE,GAAG,SAAS;sBACzB,cAAA,8OAAC;gBACC,UAAU,CAAC;oBACT,EAAE,cAAc;oBAChB,KAAK,UAAU,YAAY,CAAC,UAAU;gBACxC;;kCAEA,8OAAC;kCACC,cAAA,8OAAC,oIAAA,CAAA,iBAAc;4BAAC,IAAG;;;;;;;;;;;kCAErB,8OAAC;kCACC,cAAA,8OAAC,oIAAA,CAAA,iBAAc;4BAAC,IAAG;;;;;;;;;;;kCAErB,8OAAC;kCACC,cAAA,8OAAC,yIAAA,CAAA,sBAAmB;;;;;;;;;;kCAEtB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAEpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAEpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAEpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAEpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAEpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAEpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;kCAGpB,8OAAC;kCACC,cAAA,8OAAC,0IAAA,CAAA,oBAAiB;4BAAC,IAAG;;;;;;;;;;;kCAExB,8OAAC;kCACC,cAAA,8OAAC,sIAAA,CAAA,kBAAe;4BAAC,IAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhC"}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Aside/Styled.tsx"],"sourcesContent":["'use client';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledAside = styled('aside')(() => ({\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  height: '100%',\n  width: '40%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '4px',\n  padding: '16px',\n}));\n\nexport const StyledAsideWrapper = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  margin: '20px 0',\n}));\n\nexport const StyledIconWrapper = styled('div')(() => ({\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: '8px 0',\n}));\n\nexport const StyledWrapper = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  margin: '8px 0',\n}));\n"],"names":[],"mappings":";;;;;;AACA;AADA;;AAGO,MAAM,cAAc,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,SAAS,IAAM,CAAC;QAChD,UAAU;QACV,KAAK;QACL,MAAM;QACN,QAAQ;QACR,OAAO;QACP,SAAS;QACT,eAAe;QACf,YAAY;QACZ,KAAK;QACL,SAAS;IACX,CAAC;AAEM,MAAM,qBAAqB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAM,CAAC;QACrD,SAAS;QACT,YAAY;QACZ,gBAAgB;QAChB,QAAQ;IACV,CAAC;AAEM,MAAM,oBAAoB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAM,CAAC;QACpD,MAAM;QACN,SAAS;QACT,eAAe;QACf,gBAAgB;QAChB,QAAQ;IACV,CAAC;AAEM,MAAM,gBAAgB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAM,CAAC;QAChD,SAAS;QACT,YAAY;QACZ,QAAQ;IACV,CAAC"}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Aside/Aside.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport {\n  StyledAside,\n  StyledAsideWrapper,\n  StyledWrapper,\n  StyledIconWrapper,\n} from './Styled';\nimport MailSharpIcon from '@mui/icons-material/MailSharp';\nimport PhoneSharpIcon from '@mui/icons-material/PhoneSharp';\nimport ContactMailSharpIcon from '@mui/icons-material/ContactMailSharp';\n\nexport const Aside = () => {\n  return (\n    <StyledAside>\n      <StyledAsideWrapper>\n        <h2>available 24/7</h2>\n      </StyledAsideWrapper>\n\n      <StyledIconWrapper>\n        <StyledWrapper>\n          <MailSharpIcon style={{ marginRight: '8px' }} />\n          <span>finance@lebiga.nl</span>\n        </StyledWrapper>\n        <StyledWrapper>\n          <PhoneSharpIcon style={{ marginRight: '8px' }} />\n          <span>+31 (0) 6 20 87 66 06</span>\n        </StyledWrapper>\n        <StyledWrapper>\n          <ContactMailSharpIcon style={{ marginRight: '8px' }} />\n          <span>contact us</span>\n        </StyledWrapper>\n      </StyledIconWrapper>\n    </StyledAside>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AAMA;AACA;AACA;AAVA;;;;;;AAYO,MAAM,QAAQ;IACnB,qBACE,8OAAC,qIAAA,CAAA,cAAW;;0BACV,8OAAC,qIAAA,CAAA,qBAAkB;0BACjB,cAAA,8OAAC;8BAAG;;;;;;;;;;;0BAGN,8OAAC,qIAAA,CAAA,oBAAiB;;kCAChB,8OAAC,qIAAA,CAAA,gBAAa;;0CACZ,8OAAC,8JAAA,CAAA,UAAa;gCAAC,OAAO;oCAAE,aAAa;gCAAM;;;;;;0CAC3C,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC,qIAAA,CAAA,gBAAa;;0CACZ,8OAAC,+JAAA,CAAA,UAAc;gCAAC,OAAO;oCAAE,aAAa;gCAAM;;;;;;0CAC5C,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC,qIAAA,CAAA,gBAAa;;0CACZ,8OAAC,qKAAA,CAAA,UAAoB;gCAAC,OAAO;oCAAE,aAAa;gCAAM;;;;;;0CAClD,8OAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;AAKhB"}},
    {"offset": {"line": 1003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Pages/Styled.tsx"],"sourcesContent":["'use client';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledWrapper = styled('div')(() => ({\n  display: 'flex', // enables flexbox\n  justifyContent: 'space-between', // optional: adds space between items\n  alignItems: 'flex-start', // aligns items at the top\n  gap: '16px', // optional: spacing between Aside and MyForm\n  padding: '16px',\n}));\n"],"names":[],"mappings":";;;AACA;AADA;;AAGO,MAAM,gBAAgB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAM,CAAC;QAChD,SAAS;QACT,gBAAgB;QAChB,YAAY;QACZ,KAAK;QACL,SAAS;IACX,CAAC"}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Pages/HomePage.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { MyForm } from '../Form/Form';\nimport { Container } from '@mui/material';\nimport { Aside } from '../Aside/Aside';\nimport { StyledWrapper } from './Styled';\n\nexport const HomePage = () => {\n  return (\n    <div>\n      <Container>\n        <StyledWrapper>\n          <Aside />\n          <MyForm />\n        </StyledWrapper>\n      </Container>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAFA;AAHA;;;;;;AAOO,MAAM,WAAW;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC,mMAAA,CAAA,YAAS;sBACR,cAAA,8OAAC,qIAAA,CAAA,gBAAa;;kCACZ,8OAAC,oIAAA,CAAA,QAAK;;;;;kCACN,8OAAC,kIAAA,CAAA,SAAM;;;;;;;;;;;;;;;;;;;;;AAKjB"}},
    {"offset": {"line": 1074, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}