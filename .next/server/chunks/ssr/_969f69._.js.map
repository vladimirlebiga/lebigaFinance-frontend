{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/app/%5Blang%5D/dictionaries.ts"],"sourcesContent":["import 'server-only';\n\nconst dictionaries = {\n  en: () => import('../dictionaries/en.json').then((module) => module.default),\n  // nl: () => import('../dictionaries/nl.json').then((module) => module.default),\n  uk: () => import('../dictionaries/uk.json').then((module) => module.default),\n  ru: () => import('../dictionaries/ru.json').then((module) => module.default),\n};\n\nexport async function getDictionary(locale: string) {\n  // If the passed locale is not one of the known keys, fallback to 'en'\n  if (!['en', 'uk', 'ru'].includes(locale)) {\n    locale = 'en';\n  }\n\n  return dictionaries[locale as 'en' | 'uk' | 'ru']();\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eAAe;IACnB,IAAI,IAAM,2GAAkC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;IAC3E,gFAAgF;IAChF,IAAI,IAAM,2GAAkC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;IAC3E,IAAI,IAAM,2GAAkC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;AAC7E;AAEO,eAAe,cAAc,MAAc;IAChD,sEAAsE;IACtE,IAAI,CAAC;QAAC;QAAM;QAAM;KAAK,CAAC,QAAQ,CAAC,SAAS;QACxC,SAAS;IACX;IAEA,OAAO,YAAY,CAAC,OAA6B;AACnD"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/app/%5Blang%5D/page.tsx"],"sourcesContent":["// import { getDictionary } from './dictionaries';\n\n// export default async function Page({\n//   params,\n// }: {\n//   params: Promise<{ lang: 'en' | 'nl' | 'uk' | 'ru' }>;\n// }) {\n//   const { lang } = await params;\n//   const dict = await getDictionary(lang); // en\n//   console.log(dict);\n//   return <button>hello sunday</button>; // Add to Cart\n// }\n\n// import { getDictionary } from './dictionaries';\n\n// export default async function Page({\n//   params,\n// }: {\n//   params: Promise<{ lang: 'en' | 'uk' | 'ru' }>;\n// }) {\n//   const { lang } = await params;\n//   console.log(lang);\n//   console.log(getDictionary);\n//   const dict = await getDictionary(lang); // en\n//   console.log(dict);\n//   return <button>hello</button>; // Add to Cart\n// }\n\nimport { redirect } from 'next/navigation';\nimport { getDictionary } from './dictionaries';\n\n// Define the valid locales\ntype Locale = 'en' | 'uk' | 'ru';\n\nexport default async function Page({\n  params,\n}: {\n  // Allow any string so we can handle invalid ones\n  params: { lang: string };\n}) {\n  const { lang } = params;\n\n  // If `lang` is not recognized, redirect to /en\n  if (!['en', 'uk', 'ru'].includes(lang)) {\n    redirect('/en');\n  }\n\n  // Now that we know it's valid, fetch the dictionary\n  const dict = await getDictionary(lang as Locale);\n\n  return <button>{dict['Add to Cart']}</button>;\n}\n"],"names":[],"mappings":"AAAA,kDAAkD;AAElD,uCAAuC;AACvC,YAAY;AACZ,OAAO;AACP,0DAA0D;AAC1D,OAAO;AACP,mCAAmC;AACnC,kDAAkD;AAClD,uBAAuB;AACvB,yDAAyD;AACzD,IAAI;AAEJ,kDAAkD;AAElD,uCAAuC;AACvC,YAAY;AACZ,OAAO;AACP,mDAAmD;AACnD,OAAO;AACP,mCAAmC;AACnC,uBAAuB;AACvB,gCAAgC;AAChC,kDAAkD;AAClD,uBAAuB;AACvB,kDAAkD;AAClD,IAAI;;;;;AAEJ;AACA;AADA;;;;AAMe,eAAe,KAAK,EACjC,MAAM,EAIP;IACC,MAAM,EAAE,IAAI,EAAE,GAAG;IAEjB,+CAA+C;IAC/C,IAAI,CAAC;QAAC;QAAM;QAAM;KAAK,CAAC,QAAQ,CAAC,OAAO;QACtC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,oDAAoD;IACpD,MAAM,OAAO,MAAM,CAAA,GAAA,sIAAA,CAAA,gBAAa,AAAD,EAAE;IAEjC,qBAAO,8OAAC;kBAAQ,IAAI,CAAC,cAAc;;;;;;AACrC"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}