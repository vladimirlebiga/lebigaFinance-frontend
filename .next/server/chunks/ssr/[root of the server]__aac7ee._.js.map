{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Schema.ts"],"sourcesContent":["import * as yup from 'yup';\nimport { InferType } from 'yup';\n\nexport const schemaContact = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове\")\n    .matches(\n      /^[A-Za-zА-Яа-яЇїІіЄєҐґ\\s-]+$/,\n      'Тільки кирилиця чи латиниця, пробіли і дефіси',\n    )\n    .min(2, \"Ім'я має містити принаймні 2 символи\")\n    .max(45, \"Ім'я може містити максимум 45 символів\"),\n  email: yup\n    .string()\n    .email('Невірний формат email')\n    .required(\"Email обов'язковий\"),\n  description: yup\n    .string()\n    .required(\"Опис обов'язковий\")\n    .min(10, 'Опис має містити принаймні 10 символів')\n    .max(1000, 'Опис може містити максимум 1000 символів'),\n  phone: yup.string().required('Телефон обовязковий'),\n  companyRegistration: yup.boolean(),\n  accountingBookkeeping: yup.boolean(),\n  taxReturns: yup.boolean(),\n  financialPlanning: yup.boolean(),\n  loansBusiness: yup.boolean(),\n  legalContract: yup.boolean(),\n  other: yup.boolean(),\n});\n\nexport type SignupSchema = InferType<typeof schemaContact>;\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,gBAAgB,oIAAI,MAAM,GAAG,KAAK,CAAC;IAC9C,MAAM,oIACH,MAAM,GACN,QAAQ,CAAC,oBACT,OAAO,CACN,gCACA,iDAED,GAAG,CAAC,GAAG,wCACP,GAAG,CAAC,IAAI;IACX,OAAO,oIACJ,MAAM,GACN,KAAK,CAAC,yBACN,QAAQ,CAAC;IACZ,aAAa,oIACV,MAAM,GACN,QAAQ,CAAC,qBACT,GAAG,CAAC,IAAI,0CACR,GAAG,CAAC,MAAM;IACb,OAAO,oIAAI,MAAM,GAAG,QAAQ,CAAC;IAC7B,qBAAqB,oIAAI,OAAO;IAChC,uBAAuB,oIAAI,OAAO;IAClC,YAAY,oIAAI,OAAO;IACvB,mBAAmB,oIAAI,OAAO;IAC9B,eAAe,oIAAI,OAAO;IAC1B,eAAe,oIAAI,OAAO;IAC1B,OAAO,oIAAI,OAAO;AACpB"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/TextMaskInput.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { IMaskInput } from 'react-imask';\n\ninterface CustomProps {\n  name: string;\n  onChange: (event: { target: { name: string; value: string } }) => void;\n}\n\nconst TextMaskCustom = React.forwardRef<HTMLElement, CustomProps>(\n  function TextMaskCustom(props, ref) {\n    const { onChange, ...other } = props;\n\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"+380 (00) 000-00-00\"\n        definitions={{\n          '#': /[1-9]/,\n        }}\n        inputRef={ref as React.RefCallback<HTMLInputElement>}\n        onAccept={(value: string) =>\n          onChange({ target: { name: props.name, value } })\n        }\n        overwrite\n      />\n    );\n  },\n);\n\nexport default TextMaskCustom;\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAFA;;;;AASA,MAAM,+BAAiB,qMAAA,CAAA,UAAK,CAAC,UAAU,CACrC,SAAS,eAAe,KAAK,EAAE,GAAG;IAChC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,GAAG;IAE/B,qBACE,8OAAC,uLAAA,CAAA,aAAU;QACR,GAAG,KAAK;QACT,MAAK;QACL,aAAa;YACX,KAAK;QACP;QACA,UAAU;QACV,UAAU,CAAC,QACT,SAAS;gBAAE,QAAQ;oBAAE,MAAM,MAAM,IAAI;oBAAE;gBAAM;YAAE;QAEjD,SAAS;;;;;;AAGf;uCAGa"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/styled.tsx"],"sourcesContent":["import { InputLabel, styled, TextField } from '@mui/material';\n\nexport const StyledTextField = styled(TextField)(({ theme }) => ({\n  '& .MuiOutlinedInput-root': {\n    borderRadius: '6px',\n    boxSizing: 'border-box !important',\n    padding: '4px',\n\n    fontSize: theme.typography.body2.fontSize,\n    fontWeight: theme.typography.body2.fontWeight,\n    lineHeight: theme.typography.body2.lineHeight,\n    '&.Mui-focused fieldset': {},\n    '& .MuiInputAdornment-root': {\n      paddingRight: '16px',\n    },\n    '& .Mui-error': {\n      borderColor: '2px solid #f44336 !important',\n    },\n    '&.Mui-error fieldset': {\n      borderColor: '2px solid #f44336',\n    },\n  },\n}));\n\nexport const StyledLabel = styled(InputLabel)(({ theme }) => ({\n  fontSize: theme.typography.body2.fontSize,\n  fontWeight: theme.typography.body2.fontWeight,\n  lineHeight: theme.typography.body2.lineHeight,\n  marginBottom: '8px',\n}));\n\nexport const StyledInputWrapper = styled('div')(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '4px',\n  width: '100%',\n}));\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;;AAEO,MAAM,kBAAkB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,mMAAA,CAAA,YAAS,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC;QAC/D,4BAA4B;YAC1B,cAAc;YACd,WAAW;YACX,SAAS;YAET,UAAU,MAAM,UAAU,CAAC,KAAK,CAAC,QAAQ;YACzC,YAAY,MAAM,UAAU,CAAC,KAAK,CAAC,UAAU;YAC7C,YAAY,MAAM,UAAU,CAAC,KAAK,CAAC,UAAU;YAC7C,0BAA0B,CAAC;YAC3B,6BAA6B;gBAC3B,cAAc;YAChB;YACA,gBAAgB;gBACd,aAAa;YACf;YACA,wBAAwB;gBACtB,aAAa;YACf;QACF;IACF,CAAC;AAEM,MAAM,cAAc,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,sMAAA,CAAA,aAAU,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC;QAC5D,UAAU,MAAM,UAAU,CAAC,KAAK,CAAC,QAAQ;QACzC,YAAY,MAAM,UAAU,CAAC,KAAK,CAAC,UAAU;QAC7C,YAAY,MAAM,UAAU,CAAC,KAAK,CAAC,UAAU;QAC7C,cAAc;IAChB,CAAC;AAEM,MAAM,qBAAqB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAM,CAAC;QACrD,SAAS;QACT,eAAe;QACf,KAAK;QACL,OAAO;IACT,CAAC"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/PhoneInput.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport TextMaskCustom from './TextMaskInput';\nimport { StyledInputWrapper, StyledLabel, StyledTextField } from './styled';\n\ninterface PhoneInputConfig {\n  name: string;\n  placeholder: string;\n  label?: string;\n}\n\nconst config: Record<string, PhoneInputConfig> = {\n  phone: {\n    name: 'phone',\n    placeholder: '1234567890',\n    label: 'Phone number',\n  },\n};\n\ninterface PhoneInputProps {\n  id: string;\n}\n\nexport const PhoneInputComponent = ({ id }: PhoneInputProps) => {\n  const { name, placeholder, label } = config[id];\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <StyledInputWrapper>\n          <StyledLabel htmlFor={name}>{label}</StyledLabel>\n          <StyledTextField\n            {...field}\n            id={name}\n            variant=\"outlined\"\n            error={!!error}\n            helperText={error ? error.message : ''}\n            fullWidth\n            placeholder={placeholder}\n            InputProps={{\n              inputComponent: TextMaskCustom as unknown as React.ElementType,\n            }}\n          />\n        </StyledInputWrapper>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AACA;AAFA;AAFA;;;;;AAYA,MAAM,SAA2C;IAC/C,OAAO;QACL,MAAM;QACN,aAAa;QACb,OAAO;IACT;AACF;AAMO,MAAM,sBAAsB,CAAC,EAAE,EAAE,EAAmB;IACzD,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,GAAG;IAC/C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAEjC,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC,qIAAA,CAAA,qBAAkB;;kCACjB,8OAAC,qIAAA,CAAA,cAAW;wBAAC,SAAS;kCAAO;;;;;;kCAC7B,8OAAC,qIAAA,CAAA,kBAAe;wBACb,GAAG,KAAK;wBACT,IAAI;wBACJ,SAAQ;wBACR,OAAO,CAAC,CAAC;wBACT,YAAY,QAAQ,MAAM,OAAO,GAAG;wBACpC,SAAS;wBACT,aAAa;wBACb,YAAY;4BACV,gBAAgB,4IAAA,CAAA,UAAc;wBAChC;;;;;;;;;;;;;;;;;AAMZ"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { Checkbox, FormControlLabel, FormHelperText } from '@mui/material';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface CheckboxInputConfig {\n  name: string;\n  label: string;\n}\n\nconst config: Record<string, CheckboxInputConfig> = {\n  companyRegistration: {\n    name: 'companyRegistration',\n    label: 'Company registration & setup (ZZP, BV, Holding, Stichting)',\n  },\n  accountingBookkeeping: {\n    name: 'accountingBookkeeping',\n    label: 'Tax returns - personal & business',\n  },\n  taxReturns: {\n    name: 'taxReturns',\n    label: 'Accounting & bookkeeping',\n  },\n  financialPlanning: {\n    name: 'financialPlanning',\n    label: 'Financial planning & tax optimization',\n  },\n  loansBusiness: {\n    name: 'loansBusiness',\n    label: 'Loans & business credit applications',\n  },\n  legalContract: {\n    name: 'legalContract',\n    label: 'Legal & contract support',\n  },\n  other: {\n    name: 'other',\n    label: 'Other questions',\n  },\n};\n\ninterface CheckboxInputProps {\n  id: string;\n}\n\nconst CheckboxInput = ({ id }: CheckboxInputProps) => {\n  const { name, label } = config[id];\n  const { control } = useFormContext();\n  return (\n    <>\n      <Controller\n        name={name}\n        control={control}\n        render={({ field, fieldState: { error } }) => (\n          <>\n            <FormControlLabel\n              control={<Checkbox {...field} checked={!!field.value} />}\n              label={label}\n            />\n            {error && <FormHelperText error>{error.message}</FormHelperText>}\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nexport default CheckboxInput;\n"],"names":[],"mappings":";;;;AAGA;AADA;AAAA;AAAA;AAFA;;;;AAUA,MAAM,SAA8C;IAClD,qBAAqB;QACnB,MAAM;QACN,OAAO;IACT;IACA,uBAAuB;QACrB,MAAM;QACN,OAAO;IACT;IACA,YAAY;QACV,MAAM;QACN,OAAO;IACT;IACA,mBAAmB;QACjB,MAAM;QACN,OAAO;IACT;IACA,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,OAAO;QACL,MAAM;QACN,OAAO;IACT;AACF;AAMA,MAAM,gBAAgB,CAAC,EAAE,EAAE,EAAsB;IAC/C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,GAAG;IAClC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IACjC,qBACE;kBACE,cAAA,8OAAC,8JAAA,CAAA,aAAU;YACT,MAAM;YACN,SAAS;YACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC;;sCACE,8OAAC,wNAAA,CAAA,mBAAgB;4BACf,uBAAS,8OAAC,gMAAA,CAAA,WAAQ;gCAAE,GAAG,KAAK;gCAAE,SAAS,CAAC,CAAC,MAAM,KAAK;;;;;;4BACpD,OAAO;;;;;;wBAER,uBAAS,8OAAC,kNAAA,CAAA,iBAAc;4BAAC,KAAK;sCAAE,MAAM,OAAO;;;;;;;;;;;;;;AAM1D;uCAEe"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Textarea/Textarea.tsx"],"sourcesContent":["'use client';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface InputConfig {\n  name: string;\n  label: string;\n  placeholder: string;\n}\n\nconst config: Record<string, InputConfig> = {\n  description: {\n    name: 'description',\n    label: 'Description',\n    placeholder: 'Enter your description',\n  },\n};\n\ninterface InputProps {\n  id: string;\n}\n\nexport const TextareaComponent = ({ id }: InputProps) => {\n  const { name, label, placeholder } = config[id];\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <label htmlFor={name}>{label}</label>\n          <TextField\n            multiline\n            rows={4}\n            {...field}\n            id={name}\n            variant=\"outlined\"\n            error={!!error}\n            helperText={error ? error.message : ''}\n            placeholder={placeholder}\n            fullWidth\n          />\n        </div>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AAFA;AADA;;;;AAWA,MAAM,SAAsC;IAC1C,aAAa;QACX,MAAM;QACN,OAAO;QACP,aAAa;IACf;AACF;AAMO,MAAM,oBAAoB,CAAC,EAAE,EAAE,EAAc;IAClD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,GAAG;IAC/C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAEjC,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;kCACC,8OAAC;wBAAM,SAAS;kCAAO;;;;;;kCACvB,8OAAC,2JAAA,CAAA,UAAS;wBACR,SAAS;wBACT,MAAM;wBACL,GAAG,KAAK;wBACT,IAAI;wBACJ,SAAQ;wBACR,OAAO,CAAC,CAAC;wBACT,YAAY,QAAQ,MAAM,OAAO,GAAG;wBACpC,aAAa;wBACb,SAAS;;;;;;;;;;;;;;;;;AAMrB"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Button/Button.tsx"],"sourcesContent":["'use client';\nimport Button from '@mui/material/Button';\nimport React from 'react';\nimport SendIcon from '@mui/icons-material/Send';\n\ninterface ButtonConfig {\n  variant: 'contained' | 'outlined' | 'text';\n  endIcon: React.ReactNode;\n  text: string;\n  type: 'button' | 'submit' | 'reset';\n}\n\nconst config: Record<string, ButtonConfig> = {\n  send: {\n    variant: 'contained',\n    endIcon: <SendIcon />,\n    text: 'Send',\n    type: 'submit',\n  },\n};\n\ninterface ButtonProps {\n  id: string;\n}\n\nexport const ButtonComponent = ({ id }: ButtonProps) => {\n  const { variant, endIcon, text, type } = config[id];\n  console.log(text);\n  return (\n    <Button variant={variant} endIcon={endIcon} type={type}>\n      {text}\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AAFA;AADA;;;;AAYA,MAAM,SAAuC;IAC3C,MAAM;QACJ,SAAS;QACT,uBAAS,8OAAC,yJAAA,CAAA,UAAQ;;;;;QAClB,MAAM;QACN,MAAM;IACR;AACF;AAMO,MAAM,kBAAkB,CAAC,EAAE,EAAE,EAAe;IACjD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG;IACnD,QAAQ,GAAG,CAAC;IACZ,qBACE,8OAAC,qJAAA,CAAA,UAAM;QAAC,SAAS;QAAS,SAAS;QAAS,MAAM;kBAC/C;;;;;;AAGP"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Input/Input.tsx"],"sourcesContent":["'use client';\nimport { TextField } from '@mui/material';\nimport React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface InputConfig {\n  name: string;\n  label: string;\n  type: string;\n  placeholder: string;\n}\n\nconst config: Record<string, InputConfig> = {\n  name: {\n    name: 'name',\n    label: 'Name',\n    type: 'text',\n    placeholder: 'Enter your name',\n  },\n  email: {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    placeholder: 'Enter your email',\n  },\n};\n\ninterface InputProps {\n  id: string;\n}\n\nexport const InputComponent = ({ id }: InputProps) => {\n  const { name, label, type, placeholder } = config[id];\n  const { control } = useFormContext();\n\n  console.log(name);\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <label htmlFor={name}>{label}</label>\n          <TextField\n            {...field}\n            id={name}\n            variant=\"outlined\"\n            type={type}\n            error={!!error}\n            helperText={error ? error.message : ''}\n            placeholder={placeholder}\n            fullWidth\n          />\n        </div>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AAFA;AADA;;;;AAYA,MAAM,SAAsC;IAC1C,MAAM;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,aAAa;IACf;IACA,OAAO;QACL,MAAM;QACN,OAAO;QACP,MAAM;QACN,aAAa;IACf;AACF;AAMO,MAAM,iBAAiB,CAAC,EAAE,EAAE,EAAc;IAC/C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,GAAG;IACrD,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAEjC,QAAQ,GAAG,CAAC;IAEZ,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;kCACC,8OAAC;wBAAM,SAAS;kCAAO;;;;;;kCACvB,8OAAC,mMAAA,CAAA,YAAS;wBACP,GAAG,KAAK;wBACT,IAAI;wBACJ,SAAQ;wBACR,MAAM;wBACN,OAAO,CAAC,CAAC;wBACT,YAAY,QAAQ,MAAM,OAAO,GAAG;wBACpC,aAAa;wBACb,SAAS;;;;;;;;;;;;;;;;;AAMrB"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Form.tsx"],"sourcesContent":["'use client';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { InferType } from 'yup';\nimport { schemaContact } from './Schema';\nimport { Box } from '@mui/material';\nimport { PhoneInputComponent } from '../Input/PhoneInput';\nimport CheckboxInput from '../Checkbox/Checkbox';\nimport { TextareaComponent } from '../Textarea/Textarea';\nimport { ButtonComponent } from '../Button/Button';\nimport { InputComponent } from '../Input/Input';\n\n// Infer your form type directly from the schema:\ntype FormValues = InferType<typeof schemaContact>;\n\nexport function MyForm() {\n  const formProps = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      description: '',\n      companyRegistration: false,\n      taxReturns: false,\n      accountingBookkeeping: false,\n      financialPlanning: false,\n      loansBusiness: false,\n      legalContract: false,\n      other: false,\n      phone: '',\n    },\n    resolver: yupResolver(schemaContact),\n  });\n\n  const onSubmit = (data: FormValues) => {\n    console.log(data);\n  };\n\n  return (\n    <FormProvider {...formProps}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          void formProps.handleSubmit(onSubmit)(e);\n        }}\n      >\n        <Box>\n          <InputComponent id=\"name\" />\n        </Box>\n        <Box>\n          <InputComponent id=\"email\" />\n        </Box>\n        <Box>\n          <PhoneInputComponent id=\"phone\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"accountingBookkeeping\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"taxReturns\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"financialPlanning\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"companyRegistration\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"loansBusiness\" />\n        </Box>\n        <Box>\n          <CheckboxInput id=\"legalContract\" />\n        </Box>\n        <Box>\n          {' '}\n          <CheckboxInput id=\"other\" />\n        </Box>\n\n        <Box>\n          <TextareaComponent id=\"description\" />\n        </Box>\n\n        <ButtonComponent id=\"send\" />\n      </form>\n    </FormProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AATA;AAIA;AALA;;;;;;;;;;;AAeO,SAAS;IACd,MAAM,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QACxB,eAAe;YACb,MAAM;YACN,OAAO;YACP,aAAa;YACb,qBAAqB;YACrB,YAAY;YACZ,uBAAuB;YACvB,mBAAmB;YACnB,eAAe;YACf,eAAe;YACf,OAAO;YACP,OAAO;QACT;QACA,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,mIAAA,CAAA,gBAAa;IACrC;IAEA,MAAM,WAAW,CAAC;QAChB,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,8OAAC,8JAAA,CAAA,eAAY;QAAE,GAAG,SAAS;kBACzB,cAAA,8OAAC;YACC,UAAU,CAAC;gBACT,EAAE,cAAc;gBAChB,KAAK,UAAU,YAAY,CAAC,UAAU;YACxC;;8BAEA,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,oIAAA,CAAA,iBAAc;wBAAC,IAAG;;;;;;;;;;;8BAErB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,oIAAA,CAAA,iBAAc;wBAAC,IAAG;;;;;;;;;;;8BAErB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,yIAAA,CAAA,sBAAmB;wBAAC,IAAG;;;;;;;;;;;8BAE1B,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBAAC,IAAG;;;;;;;;;;;8BAEpB,8OAAC,iLAAA,CAAA,MAAG;;wBACD;sCACD,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;;8BAGpB,8OAAC,iLAAA,CAAA,MAAG;8BACF,cAAA,8OAAC,0IAAA,CAAA,oBAAiB;wBAAC,IAAG;;;;;;;;;;;8BAGxB,8OAAC,sIAAA,CAAA,kBAAe;oBAAC,IAAG;;;;;;;;;;;;;;;;;AAI5B"}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Pages/HomePage.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { MyForm } from '../Form/Form';\nimport { Container } from '@mui/material';\n\nexport const HomePage = () => {\n  return (\n    <Container maxWidth=\"sm\">\n      <div>\n        <MyForm />\n      </div>\n    </Container>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,MAAM,WAAW;IACtB,qBACE,8OAAC,mMAAA,CAAA,YAAS;QAAC,UAAS;kBAClB,cAAA,8OAAC;sBACC,cAAA,8OAAC,kIAAA,CAAA,SAAM;;;;;;;;;;;;;;;AAIf"}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}