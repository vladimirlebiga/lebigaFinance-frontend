{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/page.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"ctas\": \"page-module___8aEwW__ctas\",\n  \"footer\": \"page-module___8aEwW__footer\",\n  \"logo\": \"page-module___8aEwW__logo\",\n  \"main\": \"page-module___8aEwW__main\",\n  \"page\": \"page-module___8aEwW__page\",\n  \"primary\": \"page-module___8aEwW__primary\",\n  \"secondary\": \"page-module___8aEwW__secondary\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Schema.ts"],"sourcesContent":["import * as yup from 'yup';\nimport { InferType } from 'yup';\n\nexport const schemaContact = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове\")\n    .matches(\n      /^[A-Za-zА-Яа-яЇїІіЄєҐґ\\s-]+$/,\n      'Тільки кирилиця чи латиниця, пробіли і дефіси',\n    )\n    .min(2, \"Ім'я має містити принаймні 2 символи\")\n    .max(45, \"Ім'я може містити максимум 45 символів\"),\n  email: yup\n    .string()\n    .email('Невірний формат email')\n    .required(\"Email обов'язковий\"),\n  description: yup\n    .string()\n    .required(\"Опис обов'язковий\")\n    .min(10, 'Опис має містити принаймні 10 символів')\n    .max(1000, 'Опис може містити максимум 1000 символів'),\n  phone: yup.string().required('Телефон обовязковий'),\n  companyRegistration: yup.boolean(),\n  accountingBookkeeping: yup.boolean(),\n  taxReturns: yup.boolean(),\n  financialPlanning: yup.boolean(),\n  loansBusiness: yup.boolean(),\n  legalContract: yup.boolean(),\n  other: yup.boolean(),\n});\n\nexport type SignupSchema = InferType<typeof schemaContact>;\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,gBAAgB,oIAAI,MAAM,GAAG,KAAK,CAAC;IAC9C,MAAM,oIACH,MAAM,GACN,QAAQ,CAAC,oBACT,OAAO,CACN,gCACA,iDAED,GAAG,CAAC,GAAG,wCACP,GAAG,CAAC,IAAI;IACX,OAAO,oIACJ,MAAM,GACN,KAAK,CAAC,yBACN,QAAQ,CAAC;IACZ,aAAa,oIACV,MAAM,GACN,QAAQ,CAAC,qBACT,GAAG,CAAC,IAAI,0CACR,GAAG,CAAC,MAAM;IACb,OAAO,oIAAI,MAAM,GAAG,QAAQ,CAAC;IAC7B,qBAAqB,oIAAI,OAAO;IAChC,uBAAuB,oIAAI,OAAO;IAClC,YAAY,oIAAI,OAAO;IACvB,mBAAmB,oIAAI,OAAO;IAC9B,eAAe,oIAAI,OAAO;IAC1B,eAAe,oIAAI,OAAO;IAC1B,OAAO,oIAAI,OAAO;AACpB"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import React from 'react';\nimport { Checkbox, FormControlLabel, FormHelperText } from '@mui/material';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface CheckboxInputConfig {\n  name: string;\n  label: string;\n}\n\nconst config: Record<string, CheckboxInputConfig> = {\n  companyRegistration: {\n    name: 'companyRegistration',\n    label: 'Company registration & setup (ZZP, BV, Holding, Stichting)',\n  },\n  accountingBookkeeping: {\n    name: 'accountingBookkeeping',\n    label: 'Tax returns - personal & business',\n  },\n  taxReturns: {\n    name: 'taxReturns',\n    label: 'Accounting & bookkeeping',\n  },\n  financialPlanning: {\n    name: 'financialPlanning',\n    label: 'Financial planning & tax optimization',\n  },\n  loansBusiness: {\n    name: 'loansBusiness',\n    label: 'Loans & business credit applications',\n  },\n  legalContract: {\n    name: 'legalContract',\n    label: 'Legal & contract support',\n  },\n  other: {\n    name: 'other',\n    label: 'Other questions',\n  },\n};\n\ninterface CheckboxInputProps {\n  id: string;\n}\n\nconst CheckboxInput = ({ id }: CheckboxInputProps) => {\n  const { name, label } = config[id];\n  const { control } = useFormContext();\n  return (\n    <>\n      <Controller\n        name={name}\n        control={control}\n        render={({ field, fieldState: { error } }) => (\n          <>\n            <FormControlLabel\n              control={<Checkbox {...field} checked={!!field.value} />}\n              label={label}\n            />\n            {error && <FormHelperText error>{error.message}</FormHelperText>}\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nexport default CheckboxInput;\n"],"names":[],"mappings":";;;;AAEA;AADA;AAAA;AAAA;;;;AAQA,MAAM,SAA8C;IAClD,qBAAqB;QACnB,MAAM;QACN,OAAO;IACT;IACA,uBAAuB;QACrB,MAAM;QACN,OAAO;IACT;IACA,YAAY;QACV,MAAM;QACN,OAAO;IACT;IACA,mBAAmB;QACjB,MAAM;QACN,OAAO;IACT;IACA,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,OAAO;QACL,MAAM;QACN,OAAO;IACT;AACF;AAMA,MAAM,gBAAgB,CAAC,EAAE,EAAE,EAAsB;IAC/C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,GAAG;IAClC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,iBAAc,AAAD;IACjC,qBACE;kBACE,cAAA,8OAAC,wKAAA,CAAA,aAAU;YACT,MAAM;YACN,SAAS;YACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC;;sCACE,8OAAC,wNAAA,CAAA,mBAAgB;4BACf,uBAAS,8OAAC,gMAAA,CAAA,WAAQ;gCAAE,GAAG,KAAK;gCAAE,SAAS,CAAC,CAAC,MAAM,KAAK;;;;;;4BACpD,OAAO;;;;;;wBAER,uBAAS,8OAAC,kNAAA,CAAA,iBAAc;4BAAC,KAAK;sCAAE,MAAM,OAAO;;;;;;;;;;;;;;AAM1D;uCAEe"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Textarea/Textarea.tsx"],"sourcesContent":["import TextField from '@mui/material/TextField';\nimport React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\ninterface InputConfig {\n  name: string;\n  label: string;\n  placeholder: string;\n}\n\nconst config: Record<string, InputConfig> = {\n  description: {\n    name: 'description',\n    label: 'Description',\n    placeholder: 'Enter your description',\n  },\n};\n\ninterface InputProps {\n  id: string;\n}\n\nexport const TextareaComponent = ({ id }: InputProps) => {\n  const { name, label, placeholder } = config[id];\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <label htmlFor={name}>{label}</label>\n          <TextField\n            multiline\n            rows={4}\n            {...field}\n            id={name}\n            variant=\"outlined\"\n            error={!!error}\n            helperText={error ? error.message : ''}\n            placeholder={placeholder}\n            fullWidth\n          />\n        </div>\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;;AAUA,MAAM,SAAsC;IAC1C,aAAa;QACX,MAAM;QACN,OAAO;QACP,aAAa;IACf;AACF;AAMO,MAAM,oBAAoB,CAAC,EAAE,EAAE,EAAc;IAClD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,GAAG;IAC/C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,iBAAc,AAAD;IAEjC,qBACE,8OAAC,wKAAA,CAAA,aAAU;QACT,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,iBACvC,8OAAC;;kCACC,8OAAC;wBAAM,SAAS;kCAAO;;;;;;kCACvB,8OAAC,2JAAA,CAAA,UAAS;wBACR,SAAS;wBACT,MAAM;wBACL,GAAG,KAAK;wBACT,IAAI;wBACJ,SAAQ;wBACR,OAAO,CAAC,CAAC;wBACT,YAAY,QAAQ,MAAM,OAAO,GAAG;wBACpC,aAAa;wBACb,SAAS;;;;;;;;;;;;;;;;;AAMrB"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Form/Form.tsx"],"sourcesContent":["import { FormProvider, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { InferType } from 'yup';\nimport { schemaContact } from './Schema';\nimport { Button, Input } from '@mui/material';\nimport { PhoneNumberInput } from '../Input/phoneNumberInput';\nimport CheckboxInput from '../Checkbox/Checkbox';\nimport { TextareaComponent } from '../Textarea/Textarea';\n\n// Infer your form type directly from the schema:\ntype FormValues = InferType<typeof schemaContact>;\n\nexport function MyForm() {\n  const formProps = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      description: '',\n      companyRegistration: false,\n      taxReturns: false,\n      accountingBookkeeping: false,\n      financialPlanning: false,\n      loansBusiness: false,\n      legalContract: false,\n      other: false,\n      phone: '',\n    },\n    resolver: yupResolver(schemaContact),\n  });\n\n  const onSubmit = (data: FormValues) => {\n    console.log(data);\n  };\n\n  return (\n    <FormProvider {...formProps}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          void formProps.handleSubmit(onSubmit)(e);\n        }}\n      >\n        <div>\n          <Input id=\"name\" />\n        </div>\n        <div>\n          <Input id=\"email\" />\n        </div>\n        <div>\n          <PhoneNumberInput />\n        </div>\n        <div>\n          <CheckboxInput id=\"companyRegistration\" />\n          <CheckboxInput id=\"accountingBookkeeping\" />\n          <CheckboxInput id=\"taxReturns\" />\n          <CheckboxInput id=\"financialPlanning\" />\n          <CheckboxInput id=\"loansBusiness\" />\n          <CheckboxInput id=\"legalContract\" />\n          <CheckboxInput id=\"other\" />\n        </div>\n        <div>\n          <TextareaComponent id=\"description\" />\n        </div>\n\n        <Button id=\"send\" />\n      </form>\n    </FormProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;;;AAGA;AACA;AAPA;AAIA;AAAA;;;;;;;;;AAQO,SAAS;IACd,MAAM,YAAY,CAAA,GAAA,wKAAA,CAAA,UAAO,AAAD,EAAE;QACxB,eAAe;YACb,MAAM;YACN,OAAO;YACP,aAAa;YACb,qBAAqB;YACrB,YAAY;YACZ,uBAAuB;YACvB,mBAAmB;YACnB,eAAe;YACf,eAAe;YACf,OAAO;YACP,OAAO;QACT;QACA,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,mIAAA,CAAA,gBAAa;IACrC;IAEA,MAAM,WAAW,CAAC;QAChB,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,8OAAC,wKAAA,CAAA,eAAY;QAAE,GAAG,SAAS;kBACzB,cAAA,8OAAC;YACC,UAAU,CAAC;gBACT,EAAE,cAAc;gBAChB,KAAK,UAAU,YAAY,CAAC,UAAU;YACxC;;8BAEA,8OAAC;8BACC,cAAA,8OAAC,uLAAA,CAAA,QAAK;wBAAC,IAAG;;;;;;;;;;;8BAEZ,8OAAC;8BACC,cAAA,8OAAC,uLAAA,CAAA,QAAK;wBAAC,IAAG;;;;;;;;;;;8BAEZ,8OAAC;8BACC,cAAA,8OAAC;;;;;;;;;;8BAEH,8OAAC;;sCACC,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;sCAClB,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;sCAClB,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;sCAClB,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;sCAClB,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;sCAClB,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;sCAClB,8OAAC,0IAAA,CAAA,UAAa;4BAAC,IAAG;;;;;;;;;;;;8BAEpB,8OAAC;8BACC,cAAA,8OAAC,0IAAA,CAAA,oBAAiB;wBAAC,IAAG;;;;;;;;;;;8BAGxB,8OAAC,0LAAA,CAAA,SAAM;oBAAC,IAAG;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/components/Pages/HomePage.tsx"],"sourcesContent":["import React from 'react';\nimport { MyForm } from '../Form/Form';\n\nexport const HomePage = () => {\n  return (\n    <div>\n      <MyForm />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;AAEO,MAAM,WAAW;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC,kIAAA,CAAA,SAAM;;;;;;;;;;AAGb"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/lebigaFinance/src/app/page.tsx"],"sourcesContent":["import styles from './page.module.css';\nimport { HomePage } from '@/components/Pages/HomePage';\n\nexport default function Home() {\n  return (\n    <div className={styles.page}>\n      <HomePage />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,IAAI;kBACzB,cAAA,8OAAC,uIAAA,CAAA,WAAQ;;;;;;;;;;AAGf"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}